// Code generated by mockery v2.14.0. DO NOT EDIT.

package domain

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockShoppingRepository is an autogenerated mock type for the ShoppingRepository type
type MockShoppingRepository struct {
	mock.Mock
}

// Cancel provides a mock function with given fields: ctx, shoppingID
func (_m *MockShoppingRepository) Cancel(ctx context.Context, shoppingID string) error {
	ret := _m.Called(ctx, shoppingID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, shoppingID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Create provides a mock function with given fields: ctx, orderID, items
func (_m *MockShoppingRepository) Create(ctx context.Context, orderID string, items []Item) (string, error) {
	ret := _m.Called(ctx, orderID, items)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, []Item) string); ok {
		r0 = rf(ctx, orderID, items)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, []Item) error); ok {
		r1 = rf(ctx, orderID, items)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockShoppingRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockShoppingRepository creates a new instance of MockShoppingRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockShoppingRepository(t mockConstructorTestingTNewMockShoppingRepository) *MockShoppingRepository {
	mock := &MockShoppingRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
