// Code generated by mockery v2.14.0. DO NOT EDIT.

package domain

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockPaymentRepository is an autogenerated mock type for the PaymentRepository type
type MockPaymentRepository struct {
	mock.Mock
}

// Confirm provides a mock function with given fields: ctx, paymentID
func (_m *MockPaymentRepository) Confirm(ctx context.Context, paymentID string) error {
	ret := _m.Called(ctx, paymentID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, paymentID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockPaymentRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPaymentRepository creates a new instance of MockPaymentRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPaymentRepository(t mockConstructorTestingTNewMockPaymentRepository) *MockPaymentRepository {
	mock := &MockPaymentRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
