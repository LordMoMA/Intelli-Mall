// Code generated by go-swagger; DO NOT EDIT.

package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/LordMoMA/Intelli-Mall/baskets/basketsclient/models"
)

// RemoveItemReader is a Reader for the RemoveItem structure.
type RemoveItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRemoveItemDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRemoveItemOK creates a RemoveItemOK with default headers values
func NewRemoveItemOK() *RemoveItemOK {
	return &RemoveItemOK{}
}

/* RemoveItemOK describes a response with status code 200, with default header values.

A successful response.
*/
type RemoveItemOK struct {
	Payload models.BasketspbRemoveItemResponse
}

// IsSuccess returns true when this remove item o k response has a 2xx status code
func (o *RemoveItemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove item o k response has a 3xx status code
func (o *RemoveItemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove item o k response has a 4xx status code
func (o *RemoveItemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove item o k response has a 5xx status code
func (o *RemoveItemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove item o k response a status code equal to that given
func (o *RemoveItemOK) IsCode(code int) bool {
	return code == 200
}

func (o *RemoveItemOK) Error() string {
	return fmt.Sprintf("[PUT /api/baskets/{id}/removeItem][%d] removeItemOK  %+v", 200, o.Payload)
}

func (o *RemoveItemOK) String() string {
	return fmt.Sprintf("[PUT /api/baskets/{id}/removeItem][%d] removeItemOK  %+v", 200, o.Payload)
}

func (o *RemoveItemOK) GetPayload() models.BasketspbRemoveItemResponse {
	return o.Payload
}

func (o *RemoveItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveItemDefault creates a RemoveItemDefault with default headers values
func NewRemoveItemDefault(code int) *RemoveItemDefault {
	return &RemoveItemDefault{
		_statusCode: code,
	}
}

/* RemoveItemDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type RemoveItemDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the remove item default response
func (o *RemoveItemDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this remove item default response has a 2xx status code
func (o *RemoveItemDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this remove item default response has a 3xx status code
func (o *RemoveItemDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this remove item default response has a 4xx status code
func (o *RemoveItemDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this remove item default response has a 5xx status code
func (o *RemoveItemDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this remove item default response a status code equal to that given
func (o *RemoveItemDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *RemoveItemDefault) Error() string {
	return fmt.Sprintf("[PUT /api/baskets/{id}/removeItem][%d] removeItem default  %+v", o._statusCode, o.Payload)
}

func (o *RemoveItemDefault) String() string {
	return fmt.Sprintf("[PUT /api/baskets/{id}/removeItem][%d] removeItem default  %+v", o._statusCode, o.Payload)
}

func (o *RemoveItemDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *RemoveItemDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
