// Code generated by mockery v2.14.0. DO NOT EDIT.

package am

import (
	context "context"
	ddd "github.com/LordMoMA/Intelli-Mall/internal/ddd"

	mock "github.com/stretchr/testify/mock"
)

// MockCommandPublisher is an autogenerated mock type for the CommandPublisher type
type MockCommandPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: ctx, topicName, cmd
func (_m *MockCommandPublisher) Publish(ctx context.Context, topicName string, cmd ddd.Command) error {
	ret := _m.Called(ctx, topicName, cmd)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, ddd.Command) error); ok {
		r0 = rf(ctx, topicName, cmd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockCommandPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockCommandPublisher creates a new instance of MockCommandPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockCommandPublisher(t mockConstructorTestingTNewMockCommandPublisher) *MockCommandPublisher {
	mock := &MockCommandPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
