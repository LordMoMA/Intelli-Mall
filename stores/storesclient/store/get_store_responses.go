// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/LordMoMA/Intelli-Mall/stores/storesclient/models"
)

// GetStoreReader is a Reader for the GetStore structure.
type GetStoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetStoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetStoreOK creates a GetStoreOK with default headers values
func NewGetStoreOK() *GetStoreOK {
	return &GetStoreOK{}
}

/* GetStoreOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetStoreOK struct {
	Payload *models.StorespbGetStoreResponse
}

// IsSuccess returns true when this get store o k response has a 2xx status code
func (o *GetStoreOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get store o k response has a 3xx status code
func (o *GetStoreOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get store o k response has a 4xx status code
func (o *GetStoreOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get store o k response has a 5xx status code
func (o *GetStoreOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get store o k response a status code equal to that given
func (o *GetStoreOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetStoreOK) Error() string {
	return fmt.Sprintf("[GET /api/stores/{id}][%d] getStoreOK  %+v", 200, o.Payload)
}

func (o *GetStoreOK) String() string {
	return fmt.Sprintf("[GET /api/stores/{id}][%d] getStoreOK  %+v", 200, o.Payload)
}

func (o *GetStoreOK) GetPayload() *models.StorespbGetStoreResponse {
	return o.Payload
}

func (o *GetStoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorespbGetStoreResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStoreDefault creates a GetStoreDefault with default headers values
func NewGetStoreDefault(code int) *GetStoreDefault {
	return &GetStoreDefault{
		_statusCode: code,
	}
}

/* GetStoreDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetStoreDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the get store default response
func (o *GetStoreDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get store default response has a 2xx status code
func (o *GetStoreDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get store default response has a 3xx status code
func (o *GetStoreDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get store default response has a 4xx status code
func (o *GetStoreDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get store default response has a 5xx status code
func (o *GetStoreDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get store default response a status code equal to that given
func (o *GetStoreDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetStoreDefault) Error() string {
	return fmt.Sprintf("[GET /api/stores/{id}][%d] getStore default  %+v", o._statusCode, o.Payload)
}

func (o *GetStoreDefault) String() string {
	return fmt.Sprintf("[GET /api/stores/{id}][%d] getStore default  %+v", o._statusCode, o.Payload)
}

func (o *GetStoreDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *GetStoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
